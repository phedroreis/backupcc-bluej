#BlueJ class context
comment0.target=EditableLink
comment0.text=\n\ <p>\n\ \u00C9\ a\ superclasse\ abstrata\ de\ todas\ as\ classes\ neste\ pacote.\ A\ fun\u00E7\u00E3o\ deste\n\ pacote\ \u00E9\ implementar\ a\ navegabilidade\ local\ na\ c\u00F3pia\ est\u00E1tica\ do\ f\u00F3rum.</p>\n\n\ <p>\n\ Isto\ \u00E9\ atingido\ editando-se\ os\ links\ que\ apontam\ para\ os\ scripts\ no\ servidor\n\ e\ fazendo-os\ apontar\ para\ os\ arquivos\ na\ c\u00F3pia\ local\ que\ foram\ "enviados"\ por\n\ estes\ respectivos\ scripts.</p>\n\n\ <p>\n\ EditableLink\ \u00E9\ uma\ classe\ abstrata\ que\ implememta\ os\ m\u00E9todos\ concretos\n\ {@link\ \#editFiles()\ editFiles}\ e\n\ {@link\ \#editFile(java.lang.String,\ backupcc.edit.EditableLink)\ editFile}\ </p>\n\n\ <p>\n\ O\ 1o\ obtem\ um\ arrray\ com\ todos\ os\ arquivos\ HTML\ que\ devem\ ser\ editados,\ l\u00EA\ o\n\ conte\u00FAdo\ de\ cada\ arquivo\ para\ dentro\ de\ um\ objeto\ String,\ e\ entrega\ essa\n\ string\ para\ o\ m\u00E9todo\n\ {@link\ \#editFile(java.lang.String,\ backupcc.edit.EditableLink)\ editFile},\n\ juntamente\ com\ um\ objeto\ especializado\ em\ fazer\ algum\ tipo\ de\ edi\u00E7\u00E3o\n\ espec\u0129fica\ no\ arquivo.</p>\n\n\ <p>\n\ Por\ exemplo\:\ nos\ arquivos\ HTML\ originalmente\ baixados\ e\ que\ devem\ ser\n\ editados,\ h\u00E1\ links\ que\ apontam\ para\ a\ raiz\ do\ servidor\ do\ f\u00F3rum.\ E\ portanto\n\ abrem\ a\ p\u00E1gina\ inicial\ ou\ principal.</p>\n\n\ <p>\n\ <small>Este\ tipo\ de\ atributo,\ em\ um\ link,\ aponta\ para\ a\ p\u00E1gina\ inicial\ do\n\ f\u00F3rum\ -&gt;\ <b>href\="https\://clubeceticismo.com.br"</b></small></p>\n\n\ <p>\n\ Mas\ um\ link\ como\ esse\ dever\u00E1\ apontar,\ na\ c\u00F3pia\ est\u00E1tica,\ para\ o\ arquivo\ no\n\ disco\ com\ uma\ vers\u00E3o\ est\u00E1tica\ dessa\ p\u00E1gina\ principal.\ Que\ na\ atual\ vers\u00E3o\n\ desta\ aplica\u00E7\u00E3o\ est\u00E1\ nomeado\ como\ <b>clubeceticismo.com.br.html</b></p>\n\n\ <p>\n\ Para\ isso\ \u00E9\ fornecida\ a\ subclasse\ (de\ EditableLink)\ {@link\ backupcc.edit.IndexPhp\n\ },\ que\ implementa\ o\ m\u00E9todo\ {@link\ backupcc.edit.EditableLink\#map(java.util.regex.Matcher,\ java.util.HashMap)\n\ }\ desta\ classe,\ encarregado\ de\ mapear\ o\ atributo\ href\ original\ para\ o\ valor\n\ que\ href\ ter\u00E1\ na\ vers\u00E3o\ editada.\ E\ inserir\ este\ mapeamento\ como\ um\ par\n\ key/value\ no\ objeto\ {@link\ backupcc.edit.EditableLink\#hashMap\ }.</p>\n\n\ <p>\n\ Desta\ forma\ o\ pacote\ implementa\ 5\ classes\ que\ estendem\ EditableLink,\ cada\ uma\n\ respons\u00E1vel\ por\ editar\ um\ tipo\ de\ link\ nos\ arquivos\ HTML\ que\ foram\n\ baixados.</p>\n\n\ <dl>\n\ <dt>{@link\ backupcc.edit.Root\ }</dt>\n\ <dd>Edita\ links\ de\ endere\u00E7os\ absolutos\ nos\ quais\ o\ nome\ de\ dom\u00EDnio\ \u00E9\ a\ raiz\n\ do\ servidor</dd>\n\ <dt>{@link\ backupcc.edit.IndexPhp\ }</dt>\n\ <dd>\ Edita\ links\ que\ apontam\ para\ a\ p\u00E1gina\ incial\ do\ f\u00F3rum.</dd>\n\ <dt>{@link\ backupcc.edit.ViewforumPhp\ }</dt>\n\ <dd>Edita\ links\ que\ apontam\ para\ o\ script\ viewforum.php</dd>\n\ <dt>{@link\ backupcc.edit.ViewtopicPhp\ }</dt>\n\ <dd>Edita\ links\ que\ apontam\ para\ o\ script\ viewtopic.php</dd>\n\ <dt>{@link\ backupcc.edit.AnyPhp\ }</dt>\n\ <dd>Qualquer\ link\ para\ scripts\ php\ que\ restar\ deve\ ser\ redirecionado\ para\ uma\n\ pagina\ informando\ se\ tratar\ de\ c\u00F3pia\ est\u00E1tica\ do\ f\u00F3rum</dd>\n\ </dl>\n\n\ @author\ "Pedro\ Reis"\n\ @since\ 1.0\ (5\ de\ setembro\ 2022)\n\ @version\ 1.0\n
comment1.params=matcher\ hashMap
comment1.target=void\ map(java.util.regex.Matcher,\ java.util.HashMap)
comment1.text=\n\ <p>\n\ Uma\ implementa\u00E7\u00E3o\ deste\ m\u00E9todo\ deve\ fornecer\ um\ objeto\ Matcher\n\ encapsulando\ a\ string\ alvo\ (o\ conte\u00FAdo\ do\ arquivo\ a\ ser\ editado),\ com\ a\n\ regex\ encarregada\ de\ pesquisar\ strings\ que\ ser\u00E3o\ substitu\u00EDdas\ na\ string\n\ alvo.</p>\n\n\ <p>\n\ Quando\n\ {@link\ \#editFile(java.lang.String,\ backupcc.edit.EditableLink)\ editFile}\n\ executar\ o\ m\u00E9todo\ find()\ deste\ Matcher\ e\ este\ retornar\ true,\ este\ m\u00E9todo\n\ map()\ do\ objeto\ ser\u00E1\ chamado\ para\ inserir\ em\ {@link\ \#hashMap\ hashMap}\ um\n\ par\ key\\value\ com\ a\ string\ a\ ser\ editada\ associada\ \u00E0\ string\ aplicada\n\ nesta\ substitui\u00E7\u00E3o.\ Ou\ seja,\ este\ m\u00E9todo\ deve\ analisar\ a\ string\ retornada\n\ pelo\ objeto\ Matcher\ e\ gerar\ a\ string\ que\ dever\u00E1\ substitui-la\ no\ HTML\n\ original,\ inserindo\ ambas\ como\ um\ par\ key\\value\ no\ objeto\ apontado\ pela\n\ refer\u00EAncia\ {@link\ \#hashMap}</p>\n\n\ @param\ matcher\ Deve\ ser\ enviado\ logo\ ap\u00F3s\ o\ m\u00E9todo\ find()\ ter\ retornado\n\ true.\n\n\ @param\ hashMap\ O\ hashMap\ no\ qual\ o\ m\u00E9todo\n\ {@link\ \#editFile(java.lang.String,\ backupcc.edit.EditableLink)\ editFile}\n\ estar\u00E1\ inserindo\ as\ strngs\ a\ serem\ substitu\u00EDdas\ com\ suas\ respectivas\n\ strings\ de\ substitui\u00E7\u00E3o.\n
comment2.params=
comment2.target=java.util.regex.Pattern\ getPattern()
comment2.text=\n\ <p>\n\ Uma\ implementa\u00E7\u00E3o\ deste\ m\u00E9todo\ deve\ retornar\ a\ regex\ para\ localizar\n\ strings\ que\ ser\u00E3o\ substitu\u00EDdas\ no\ arquivo\ alvo.</p>\n\n\ <p>\n\ A\ subclasse\ {@link\ backupcc.edit.ViewtopicPhp\ ViewtopicPhhp},\ por\n\ exemplo,\ \u00E9\ a\ subclasse\ especializada\ em\ substituir\ os\ links\ que\ apontam\n\ para\ o\ script\ viewtopic.php\ nos\ HTMLs\ originais.\ Portanto\ a\ implementa\u00E7ao\n\ deste\ m\u00E9todo\ por\ esta\ subclasse\ deve\ fornecer\ a\ regex\ que\ localiza\ este\n\ tipo\ de\ atributo\ nos\ links.</p>\n\n\ @return\ Um\ objeto\ Pattern\ que\ localiza\ strings\ a\ serem\ editadas\ nos\n\ arquivos\ alvo.\n
comment3.params=contentFile\ link
comment3.target=void\ editFile(backupcc.strings.StringEditor,\ EditableLink)
comment3.text=\n\ <p>\n\ A\ fun\u00E7\u00E3o\ deste\ m\u00E9todo\ \u00E9\ editar\ o\ conte\u00FAdo\ de\ um\ arquivo\ (passado\ em\n\ contentFile)\ em\ todas\ as\ strings\ que\ um\ objeto\ EditableLink\n\ localizar.</p>\n\n\ <p>\n\ O\ pr\u00F3prio\ objeto\ EditableLink\ ir\u00E1\ fornecer\ as\ implementa\u00E7\u00F5es\ de\ map()\ e\n\ getPattern()\ utilizadas\ por\ este\ m\u00E9todo\ para\ realizar\ tais\n\ substitui\u00E7\u00F5es.</p>\n\n\ <p>\n\ Um\ objeto\ EditableLink\ pertence\ a\ uma\ das\ subclasses\ de\ EditableLink\n\ neste\ pacote,\ e\ cada\ uma\ destas\ subclasses\ \u00E9\ especializada\ em\ um\ tipo\n\ destas\ substitui\u00E7\u00F5es</p>\n\n\ <p>\n\ Este\ m\u00E9todo\ n\u00E3o\ retorna\ nenhum\ valor\ ou\ objeto\ porque\ StringEditor\n\ encapsula\ o\ c\u00F3digo\ fonte\ que\ ser\u00E1\ editado\ e\ faz\ as\ altera\u00E7\u00F5es\n\ propriamente\ ditas\ nele\ atrav\u00E9s\ de\ seu\ m\u00E9todo\ replace.\ O\ chamador\ deste\n\ m\u00E9todo\ tem\ acesso\ ao\ objeto\ StringEditor\ passado\ e\ pode\ recuperar\ o\n\ c\u00F3digo\ fonte\ que\ foi\ alterado\ depois\ da\ execu\u00E7\u00E3o\ de\ editFile()</p>\n\n\ @param\ contentFile\ Um\ objeto\ StringEditor\ contendo\ o\ c\u00F3digo\ fonte\ de\ uma\n\ p\u00E1gina\ do\ f\u00F3rum\ e\ que\ deve\ ser\ editado\ para\ se\ tornar\ uma\ p\u00E1gina\ local\n\ naveg\u00E1vel.\n\n\ @param\ link\ Um\ objeto\ de\ uma\ subclasse\ de\ EditableLink\ especializada\ em\n\ editar\ um\ tipo\ de\ padr\u00E3o\ de\ string\ (geralmente\ um\ tipo\ de\ link)\ no\n\ arquivo\ alvo,\ cujo\ conte\u00FAdo\ de\ texto\ est\u00E1\ sendo\ passado\ a\ este\ m\u00E9todo\ no\n\ StringEditor\ contentFile.\n\n
comment4.params=
comment4.target=void\ editFiles()
comment4.text=\n\ Edita\ todos\ os\ HTMLs\ de\ p\u00E1ginas\ do\ f\u00F3rum\ baixados\ na\ \u00FAltima\ execu\u00E7\u00E3o\ de\n\ um\ backup\ incremental\ do\ f\u00F3rum.\n
numComments=5
